ðŸš€ Mock Spark Production Ready Demo
============================================================
âœ… 515 tests passing (100% pass rate)
âœ… 100% Zero Raw SQL architecture
âœ… Database-agnostic (DuckDB/PostgreSQL/MySQL/SQLite)
âœ… 100% PySpark compatibility
âœ… Enterprise-grade features - Version 2.0.0
============================================================

============================================================
ðŸŽ¯ Creating Mock Spark Session
============================================================
âœ“ Created session: ProductionDemo
âœ“ Version: 3.4.0

============================================================
ðŸŽ¯ Comprehensive Data Types Support
============================================================
âœ“ Created complex schema with 15+ data types
âœ“ Schema fields: 15

ðŸ“‹ Data Generation
----------------------------------------
âœ“ Generated 100 realistic records
âœ“ Created DataFrame with 100 rows
âœ“ DataFrame columns: ['id', 'name', 'age', 'salary', 'is_active', 'birth_date', 'created_at', 'balance', 'tags', 'metadata', 'avatar', 'optional_field', 'score', 'category_id', 'status_code']

============================================================
ðŸŽ¯ Advanced DataFrame Operations
============================================================

ðŸ“‹ Complex Filtering and Selection
----------------------------------------
âœ“ Complex filtering applied
Traceback (most recent call last):
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 951, in do_execute
    cursor.execute(statement, parameters)
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/duckdb_engine/__init__.py", line 150, in execute
    self.__c.execute(statement, parameters)
duckdb.duckdb.BinderException: Binder Error: Referenced column "Senior" not found in FROM clause!
Candidate bindings: "category_id", "score", "birth_date", "age"

LINE 1: ....name), length(temp_table_0.name), CASE WHEN "age" > 30 THEN Senior WHEN "age" > 25 THEN Mid-level ELSE Junior END, ...
                                                                        ^

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "examples/production_ready_demo.py", line 315, in <module>
    main()
  File "examples/production_ready_demo.py", line 133, in main
    print(f"âœ“ Filtered rows: {filtered_df.count()}")
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/mock_spark/dataframe/dataframe.py", line 270, in count
    materialized = self._materialize_if_lazy()
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/mock_spark/dataframe/dataframe.py", line 1567, in _materialize_if_lazy
    return LazyEvaluationEngine.materialize(self)
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/mock_spark/dataframe/lazy.py", line 69, in materialize
    rows = materializer.materialize(df.data, df.schema, df._operations_queue)
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/mock_spark/dataframe/sqlmodel_materializer.py", line 87, in materialize
    self._apply_select(current_table_name, next_table_name, op_val)
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/mock_spark/dataframe/sqlmodel_materializer.py", line 911, in _apply_select
    results = session.exec(text(sql)).all()
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/sqlmodel/orm/session.py", line 83, in exec
    results = super().execute(
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1419, in execute
    return meth(
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 526, in _execute_on_connection
    return connection._execute_clauseelement(
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1641, in _execute_clauseelement
    ret = self._execute_context(
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    return self._exec_single_context(
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 951, in do_execute
    cursor.execute(statement, parameters)
  File "/Users/odosmatthews/.pyenv/versions/3.8.18/lib/python3.8/site-packages/duckdb_engine/__init__.py", line 150, in execute
    self.__c.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (duckdb.duckdb.BinderException) Binder Error: Referenced column "Senior" not found in FROM clause!
Candidate bindings: "category_id", "score", "birth_date", "age"

LINE 1: ....name), length(temp_table_0.name), CASE WHEN "age" > 30 THEN Senior WHEN "age" > 25 THEN Mid-level ELSE Junior END, ...
                                                                        ^
[SQL: SELECT "id", "name", "age", "salary", upper(temp_table_0.name), length(temp_table_0.name), CASE WHEN "age" > 30 THEN Senior WHEN "age" > 25 THEN Mid-level ELSE Junior END, (coalesce(CAST(salary AS VARCHAR), CAST(0.0 AS VARCHAR))) AS safe_salary FROM temp_table_0]
(Background on this error at: https://sqlalche.me/e/20/f405)
